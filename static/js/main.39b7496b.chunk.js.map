{"version":3,"sources":["components/Article.js","components/Apple.js","components/News.js","components/Weather.js","components/Quotes.js","components/Wallstreet.js","App.js","serviceWorker.js","index.js"],"names":["Article","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","props","newsLimit","react_default","a","createElement","className","style","backgroundImage","concat","article","urlToImage","title","description","Component","Apple","toggleArticles","isOpen","setDisplayedArticles","window","scrollTo","setState","displayedArticles","articles","toggleArticlesButtonText","fetch","then","response","json","result","getAppleNews","news","_this2","hasNewsLimit","slice","map","index","components_Article","key","onClick","News","console","log","getNews","Weather","weather","icon","city","catch","error","getWeather","forecast","main","name","temp","alt","src","Quotes","quotes","getQuotes","quote","body","author","Wallstreet","getWallstreet","App","react_router_dom","exact","to","components_Weather","react_router","path","render","components_News","components_Quotes","component","components_Wallstreet","components_Apple","Boolean","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39b7496b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// This component is used in all news pages since they use the same markup and data structure. It renders the headline of the article and description\n\nclass Article extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  hasNewsLimit() {\n    return this.props.newsLimit > 0;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"news\">\n          <div className=\"news-image\" style={{backgroundImage: `url(${this.props.article.urlToImage})`}}></div>\n          <h1>{ this.props.article.title }</h1>\n          <p>{ this.props.article.description }</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Article;\n","import React, { Component } from 'react';\nimport Article from './Article';\n\n// This component hits a news api endpoint that returns all Apple related news\n\nconst url =\n  \"https://newsapi.org/v2/everything?q=apple&from=2019-07-18&to=2019-07-18&sortBy=popularity&apiKey=cb83495bb9724d3c80337804facdd7de\";\n\n  class Apple extends Component {\n    constructor() {\n      super();\n      this.state = { articles: [], displayedArticles: [], isOpen: false };\n    }\n\n    async getAppleNews() {\n      let result = await fetch(url).then(response => response.json());\n      return result.articles;\n    }\n\n    async componentDidMount() {\n      this.getAppleNews().then(\n        news => this.setState({articles: news})\n      ).then(() => {\n        this.setDisplayedArticles();\n      });\n    }\n\n    hasNewsLimit() {\n      return this.props.newsLimit > 0;\n    }\n\n    setDisplayedArticles() {\n      if (this.hasNewsLimit()) {\n        this.setState({isOpen: false, displayedArticles: this.state.articles.slice(0, this.props.newsLimit)});\n      }\n      else {\n        this.setState({displayedArticles: this.state.articles});\n      }\n    }\n\n    toggleArticles = () => {\n      if (!this.state.isOpen)\n        this.setState({ displayedArticles: this.state.articles, isOpen: true });\n      else {\n        this.setDisplayedArticles();\n        window.scrollTo(0, 0);\n      }\n    }\n\n    // This function toggles the button text\n    toggleArticlesButtonText = () => {\n      return this.state.isOpen ? 'See Less Articles' : 'See All Articles';\n    }\n\n    render() {\n      return (\n        <div>\n          {this.state.displayedArticles.map((article, index) =>\n            <Article\n              article={article}\n              key={index}\n            />\n          )}\n          <button className=\"button-all\" onClick={this.toggleArticles}>{this.toggleArticlesButtonText()}</button>\n        </div>\n      );\n    }\n  }\n\n  export default Apple;\n","import React, { Component } from 'react';\nimport Article from './Article';\n\n// This component hits a news api that returns the top headlines of the US\n\nconst url =\n  \"https://newsapi.org/v2/top-headlines?country=us&apiKey=cb83495bb9724d3c80337804facdd7de\";\n\n  class News extends Component {\n    constructor() {\n      super();\n      this.state = { articles: [], displayedArticles: [], isOpen: false };\n    }\n\n    async getNews() {\n      let result = await fetch(url).then(response => response.json());\n\n      return result.articles;\n    }\n\n    async componentDidMount() {\n      console.log(\"Component mounted!\")\n      this.getNews().then(\n        news => this.setState({articles: news})\n      ).then(() => {\n        this.setDisplayedArticles();\n      });\n    }\n\n    // Created this method to check length of articles\n    hasNewsLimit() {\n      return this.props.newsLimit > 0;\n    }\n\n    // In the App, each news component has a prop that specifies the news limit to show only 3 at first and all of them when \"see all articles\" button is clicked.\n    setDisplayedArticles() {\n      if (this.hasNewsLimit()) {\n        this.setState({isOpen: false, displayedArticles: this.state.articles.slice(0, this.props.newsLimit)});\n      }\n      else {\n        this.setState({displayedArticles: this.state.articles});\n      }\n    }\n\n    // This function toggles the articles from the limit set by the prop, to all.\n    toggleArticles = () => {\n      if (!this.state.isOpen)\n        this.setState({ displayedArticles: this.state.articles, isOpen: true });\n      else {\n        this.setDisplayedArticles();\n        window.scrollTo(0, 0);\n      }\n    }\n\n    // This function toggles the text of the button\n    toggleArticlesButtonText = () => {\n      return this.state.isOpen ? 'See Less Articles' : 'See All Articles';\n    }\n\n    render() {\n      return (\n        <div>\n          {this.state.displayedArticles.map((article, index) =>\n            <Article\n              article={article}\n              key={index}\n            />\n          )}\n          <button className=\"button-all\" onClick={this.toggleArticles}>{this.toggleArticlesButtonText()}</button>\n        </div>\n      );\n    }\n  }\n\n  export default News;","import React, { Component } from 'react';\n\n// This component hits a weather api and displays it on the header of the app\n\nconst url = \"https://api.openweathermap.org/data/2.5/weather?id=4299276&APPID=6ca05d91658fd6349adc797a8d6acb2a&units=imperial\";\n\nclass Weather extends Component {\n  constructor() {\n    super();\n    this.state = { weather: [], icon: '', city: ''};\n  }\n\n  async getWeather() {\n    let result = await fetch(url)\n    .then(response => response.json())\n    .catch((error) => {\n      console.log(error);\n    });\n\n    return result;\n  }\n\n  componentDidMount() {\n    this.getWeather().then(\n      forecast => {\n        this.setState({\n          weather: forecast.main,\n          icon: forecast.weather[0].icon,\n          city: forecast.name\n        })\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"weather\">\n        <h2>{ this.state.weather.temp + '°F' }</h2>\n        <img className=\"icon\" alt=\"weather icon\" src={`http://openweathermap.org/img/wn/${this.state.icon}.png`} />\n        <p className=\"city\">{ this.state.city + ', KY'}</p>\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n","import React, { Component } from 'react';\n\n// This component hits an api that return a random  quote of the day\n\nconst url = \"https://favqs.com/api/qotd\";\n\n  class Quotes extends Component {\n    constructor() {\n      super();\n      this.state = { quotes: {} };\n    }\n\n    async getQuotes() {\n      let result = await fetch(url)\n      .then(response => response.json())\n      .catch((error) => {\n        console.log(error);\n      });\n\n      return result;\n    }\n\n    componentDidMount() {\n      this.getQuotes().then(\n        quote => this.setState({quotes: quote.quote})\n      );\n    }\n\n    render() {\n      return (\n        <div>\n          <h3>{ '\"' + this.state.quotes.body + '\"'}</h3>\n          <p className=\"author\">{'— ' + this.state.quotes.author}</p>\n        </div>\n      );\n    }\n  }\n\nexport default Quotes;\n","import React, { Component } from 'react';\nimport Article from './Article';\n\n// This component hits a news api endpoint that returns the news headlines from the wallstreet journal\n\nconst url = \"https://newsapi.org/v2/everything?domains=wsj.com&apiKey=cb83495bb9724d3c80337804facdd7de\"\n\nclass Wallstreet extends Component {\n  constructor() {\n    super();\n    this.state = { articles: [], displayedArticles: [], isOpen: false };\n  }\n\n  async getWallstreet() {\n    let result = await fetch(url).then(response => response.json());\n\n    return result.articles;\n  }\n\n  async componentDidMount() {\n    this.getWallstreet().then(\n      article => this.setState({articles: article})\n    ).then(() => {\n      this.setDisplayedArticles();\n    });\n  }\n\n  hasNewsLimit() {\n    return this.props.newsLimit > 0;\n  }\n\n  setDisplayedArticles() {\n    if (this.hasNewsLimit()) {\n      this.setState({isOpen: false, displayedArticles: this.state.articles.slice(0, this.props.newsLimit)});\n    }\n    else {\n      this.setState({displayedArticles: this.state.articles});\n    }\n  }\n\n  toggleArticles = () => {\n    if (!this.state.isOpen)\n      this.setState({ displayedArticles: this.state.articles, isOpen: true });\n    else {\n      this.setDisplayedArticles();\n      window.scrollTo(0, 0);\n    }\n  }\n\n  toggleArticlesButtonText = () => {\n    return this.state.isOpen ? 'See Less Articles' : 'See All Articles';\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.displayedArticles.map((article, index) =>\n          <Article\n            article={article}\n            key={index}\n          />\n        )}\n        <button className=\"button-all\" onClick={this.toggleArticles}>{this.toggleArticlesButtonText()}</button>\n      </div>\n    );\n  }\n}\n\nexport default Wallstreet;\n","import React, { Component } from 'react';\nimport './App.css';\nimport './css/news.css'\nimport './css/header.css'\nimport './css/weather.css'\nimport './css/quote.css'\nimport Apple from './components/Apple';\nimport News from './components/News';\nimport Weather from './components/Weather';\nimport Quotes from './components/Quotes';\nimport Wallstreet from './components/Wallstreet';\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\n\n// This app renders all news, weather and daily quote components to create a portal where you can get caught up with current news, and allows you to check the weather as well as giving you an inspirational quote of the day\n\n class App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n        <div>\n          <header>\n          <h1 className=\"headline\">Top US News</h1>\n        <nav>\n          <ul>\n            <li>\n              <NavLink exact to=\"/\">Home</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/wallstreet/\">Wallstreet Journal</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/apple/\">Apple News</NavLink>\n            </li>\n          </ul>\n        </nav>\n        <div><Weather /></div>\n\n        </header>\n\n        <Route path=\"/\" exact render={() => (\n          <div>\n            <div className=\"articles\"><News newsLimit={3} /></div>\n            <div className=\"quotes\"><Quotes /></div>\n          </div>\n          )\n        } />\n        <Route path=\"/wallstreet/\" exact component={() =>  (\n          <div className=\"articles\"><Wallstreet newsLimit={3}/></div>\n        )} />\n        <Route path=\"/apple/\" exact component={() => (\n          <div className=\"articles\"><Apple newsLimit={3}/></div>\n        )} />\n      </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}